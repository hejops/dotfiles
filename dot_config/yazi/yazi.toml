"$schema" = "https://yazi-rs.github.io/schemas/yazi.json"

# https://github.com/sxyazi/yazi/releases/download/v$VERSION/yazi-x86_64-unknown-linux-gnu.zip

# TODO: disable icons
# TODO: color scheme

[manager]
linemode       = "size"      # what gets displayed next to items
ratio          = [ 0, 2, 3 ] # array must contain 3 items
scrolloff      = 5
show_hidden    = false
show_symlink   = true
sort_by        = "mtime"
sort_dir_first = false
sort_reverse   = true
sort_sensitive = false

[preview]
cache_dir       = ""
image_filter    = "triangle"
image_quality   = 75
max_height      = 900
max_width       = 600
sixel_fraction  = 15
tab_size        = 2
ueberzug_offset = [ 0, 0, 0, 0 ]
ueberzug_scale  = 1

[opener]
edit = [ { run = '$EDITOR "$@"', desc = "$EDITOR", block = true, for = "unix" } ]

open = [
  # { run = 'feh -dFZ "$@"', desc = "Open", for = "linux" },
  # i like that mimeapps is easily configurable, but i don't like that you can't (?) specify args
  { run = 'mimeopen "$@"', desc = "Open", for = "linux" }, # ~/.config/mimeapps.list
  { run = 'xdg-open "$@"', desc = "Open", for = "linux" },
]

reveal = [ #
  { run = 'xdg-open "$(dirname "$0")"', desc = "Reveal", for = "linux" },
  { run = '''exiftool "$1"; echo "Press enter to exit"; read _''', block = true, desc = "Show EXIF", for = "unix" },
]

# extract = [{ run = 'unar "$1"', desc = "Extract here", for = "unix" }]

play = [ #
  { run = 'mpv --force-window "$@"', orphan = true, for = "unix" },
  { run = '''mediainfo "$1"; echo "Press enter to exit"; read _''', block = true, desc = "Show media info", for = "unix" },
]

[open]
rules = [ #
  { name = "*/", use = [ "edit", "open", "reveal" ] },
  { mime = "text/*", use = [ "edit", "reveal" ] },
  { mime = "image/*", use = [ "open", "reveal" ] },
  { mime = "{audio,video}/*", use = [ "play", "reveal" ] },
  { mime = "inode/x-empty", use = [ "edit", "reveal" ] },
  { mime = "application/epub+zip", use = [ "open" ] },
  { mime = "application/*zip", use = [ "extract", "reveal" ] },
  { mime = "application/x-{tar,bzip*,7z-compressed,xz,rar}", use = [ "extract", "reveal" ] },
  { mime = "application/json", use = [ "edit", "reveal" ] },
  { mime = "*/javascript", use = [ "edit", "reveal" ] },
  { mime = "*", use = [ "open", "reveal" ] },
]

[tasks]
bizarre_retry    = 5
image_alloc      = 536870912 # 512MB
image_bound      = [ 0, 0 ]
macro_workers    = 25
micro_workers    = 10
suppress_preload = false

[plugin]

# https://github.com/sxyazi/yazi/tree/shipped/yazi-plugin/preset/plugins

# https://yazi-rs.github.io/docs/configuration/yazi/#plugin.previewers

# name (String): Glob expression for matching the file name. Case insensitive
# by default, add \s to the beginning to make it sensitive.
#
# mime (String): Glob expression for matching the mime-type. Case insensitive
# by default, add \s to the beginning to make it sensitive.
#
# run (String): The name of the Lua plugin to be ran.
#
# sync (Boolean): Whether to run in the sync context, default is false.

# apparently, most file previews just work ootb, which is quite good
# TODO: epub (bsdtar), mp3/flac/etc (mediainfo)

prepend_previewers = [ { mime = "audio/*", run = "media" } ]

[input]
cd_offset        = [ 0, 2, 50, 3 ]
cd_origin        = "top-center"
cd_title         = "Change directory:"
create_offset    = [ 0, 2, 50, 3 ]
create_origin    = "top-center"
create_title     = "Create:"
delete_offset    = [ 0, 2, 50, 3 ]
delete_origin    = "top-center"
delete_title     = "Delete {n} selected file{s} permanently? (y/N)"
filter_offset    = [ 0, 2, 50, 3 ]
filter_origin    = "top-center"
filter_title     = "Filter:"
find_offset      = [ 0, 2, 50, 3 ]
find_origin      = "top-center"
find_title       = [ "Find next:", "Find previous:" ]
overwrite_offset = [ 0, 2, 50, 3 ]
overwrite_origin = "top-center"
overwrite_title  = "Overwrite an existing file? (y/N)"
quit_offset      = [ 0, 2, 50, 3 ]
quit_origin      = "top-center"
quit_title       = "{n} task{s} running, sure to quit? (y/N)"
rename_offset    = [ 0, 1, 50, 3 ]
rename_origin    = "hovered"
rename_title     = "Rename:"
search_offset    = [ 0, 2, 50, 3 ]
search_origin    = "top-center"
search_title     = "Search via {n}:"
shell_offset     = [ 0, 2, 50, 3 ]
shell_origin     = "top-center"
shell_title      = [ "Shell:", "Shell (block):" ]
trash_offset     = [ 0, 2, 50, 3 ]
trash_origin     = "top-center"
trash_title      = "Move {n} selected file{s} to trash? (y/N)"

[which]
sort_by        = "none"
sort_sensitive = false
sort_reverse   = false

# [select]
# open_title  = "Open with:"
# open_origin = "hovered"
# open_offset = [ 0, 1, 50, 7 ]

# [log]
# enabled = false
