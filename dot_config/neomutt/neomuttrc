# alternatives:
# - aerc (go): does not use local storage ootb
# - himalaya (rust): not a tui ootb

# https://man.freebsd.org/cgi/man.cgi?query=mailcap&sektion=4&manpath=FreeBSD+8.0-RELEASE+and+Ports#end
set mailcap_path = "~/.config/neomutt/mailcap"

# https://neomutt.org/guide/reference.html
# https://neomutt.org/guide/advancedusage.html#new-mail
# https://neomutt.org/test-doc/bestpractice/nativimap

# https://empt1e.blogspot.com/2009/10/using-mutt-with-gmail-imap-complete.html
# https://handsomecheung.github.io/mutt-manual-cn/mutt-manual-1.5.19-en.html
# https://medium.com/@villeheilala/command-line-email-with-neomutt-and-gmail-d558864ac3c8
# https://opensource.com/article/21/7/gmail-linux-terminal
# https://pthree.org/2012/01/07/encrypted-mutt-imap-smtp-passwords/
# https://stevelosh.com/blog/2012/10/the-homely-mutt/#s13-configuring -- many (older) configs taken from here
# https://unix.stackexchange.com/a/223088
# https://wiki.archlinux.org/index.php/Mutt#mailboxes

# TODO: multi account -- moot point for now, since work only needs email ~1x/month, and microsoft imap isn't straightforward
# https://github.com/cweagans/dotfiles/tree/master/.config/mutt

# fetching mail {{{
# deprecated -- use mbsync to fetch mail instead
# https://wiki.archlinux.org/index.php/Mutt#Passwords_management
# https://gist.github.com/bnagy/8914f712f689cc01c267

# this is required to send mail
set smtp_url = "smtp://hejops1@smtp.gmail.com:587"	# not smtps!

# TODO: gpg
# https://unix.stackexchange.com/a/20572
# set imap_pass=`cat $HOME/.passwd/gmail.txt`
set smtp_pass=`cat $HOME/.passwd/gmail.txt`

# source "gpg -dq $HOME/.config/neomutt/passwords.gpg |"
# set imap_pass = $my_pass
# set smtp_pass = $my_pass

#set imap_user = "hejops1@gmail.com"
#set folder = "imaps://imap.gmail.com:993"		# load on every startup, but all mailboxes work fine (except sent)
#set ssl_starttls = yes
## https://unix.stackexchange.com/a/97679
#set spoolfile = "+INBOX"		# appears to be case-insensitive
##set postponed = "+[GMail]/Drafts"
#set mbox      = "+Archive"
#named-mailboxes "INBOX" =INBOX
#named-mailboxes sent '+[Gmail]/Sent Mail'
#mailboxes "+INBOX" "+School" "+Bandcamp" "+Film" "+Housing" "+Trash"
## symbol meanings: https://neomutt.org/guide/advancedusage.html#shortcuts
## figure out how to shortcut sent

# Activate caching, as it can greatly improve speed
set header_cache = "~/.mutt/cache/headers"
set message_cachedir = "~/.mutt/cache/bodies"

# Disable saving outgoing mail since Gmail saves them by default.
set record = ""

# }}}

# indexing mail (notmuch) {{{
# https://chrisdone.com/posts/emacs-mail/
# TODO: set up tags https://wiki.archlinux.org/index.php/Notmuch#Integrating_with_NeoMutt
# https://hobo.house/2015/09/09/take-control-of-your-email-with-mutt-offlineimap-notmuch/

# IMAP equivalent
# https://github.com/neomutt/neomutt/issues/2838#issuecomment-795006047

# TODO: how to add "deleted" tag?
# TODO: tell notmuch to de-tag inbox from bc/wg

set folder = ~/.mail
# set nm_default_url = notmuch:///home/user/.mail # must be absolute; https://neomutt.org/feature/notmuch#3-1-%C2%A0folders-url
set virtual_spool_file = yes	# if this is no, no mailbox will be auto-loaded

# https://notmuchmail.org/manpages/notmuch-search-terms-7/
# see ~/scripts/mailtag
# subject is case-insensitive
# to/from
# virtual-mailboxes delete	notmuch://?query=tag:delete
# virtual-mailboxes deleted	notmuch://?query=tag:deleted
virtual-mailboxes day		'notmuch://?query=(date:24h.. and tag:inbox)'
virtual-mailboxes important	notmuch://?query=tag:flagged
# partial matches not supported
virtual-mailboxes sent		notmuch://?query=tag:sent
virtual-mailboxes jobs		"notmuch://?query=from:jobalerts-noreply@linkedin.com"

# un-flagged mails will remain flagged if modified on a different device; this
# hacky macro ensures mails (that erroneously remain in the tag:flagged query)
# are unflagged properly (it does reset cursor position, which is meh)
macro index I "<flag-message><previous-line><sync-mailbox><flag-message><sidebar-open>" "force flag"

# dummy separator
# TODO: remove mail count
virtual-mailboxes ' '	notmuch://?query=from:---

virtual-mailboxes all		notmuch://?query=tag:inbox
virtual-mailboxes month		notmuch://?query=date:month..
virtual-mailboxes week		notmuch://?query=date:week..

virtual-mailboxes ' '	notmuch://?query=from:----

virtual-mailboxes commerce	notmuch://?query=tag:commerce
virtual-mailboxes github-ci	"notmuch://?query=to:ci_activity@noreply.github.com"
virtual-mailboxes linkedin	"notmuch://?query=from:inmail-hit-reply@linkedin.com"
virtual-mailboxes meetings	"notmuch://?query=body:meetup-join or body:us06web.zoom.us"

virtual-mailboxes ' '	notmuch://?query=from:-----

# virtual-mailboxes attachment	notmuch://?query=attachment:.
# virtual-mailboxes discogs	notmuch://?query=from:discogs
virtual-mailboxes bahn		notmuch://?query=from:bahn
virtual-mailboxes bandcamp	notmuch://?query=from:bandcamp
virtual-mailboxes github	notmuch://?query=from:github
virtual-mailboxes paypal	notmuch://?query=from:paypal

# set nm_record = no		# should the NeoMutt record be indexed by notmuch?
# set nm_record_tags = "-inbox,sent,local"	# if yes, specify the default tags applied to messages stored to the NeoMutt record
# When set to 0 this variable disables the window feature.

# }}}

# viewing mail {{{

ignore *                                # ignore all headers
unignore from: to: cc: date: subject:   # show only these
unhdr_order *                           # some distros order things by default
hdr_order from: to: cc: date: subject:  # and in this order

# set pager_context = 3
set date_format = "%m/%d"
set index_format = "[%Z]  %D  %-20.20F  %s"	# https://neomutt.org/guide/reference.html#index-format
set pager_index_lines = 10		# open message and index concurrently
set pager_stop = yes			# stop at end instead of going to next mail
set reply_regex = "^(([Rr][Ee]?(\[[0-9]+\])?: *)?(\[[^]]+\] *)?)*"
set sort_re                                # thread based on regex
set uncollapse_jump                        # don't collapse on an unread message

# set sort = threads                         # like gmail
# set sort_aux = reverse-last-date-received  # like gmail

set sort_aux = "last-date-received"
set sort = reverse-threads

# alternative_order text/html text/enriched text/plain	# prefer html
# handled by .mailcap
# http://jasonwryan.com/blog/2012/05/12/mutt/
# https://neomutt.org/guide/mimesupport.html#alternative-order
# https://neomutt.org/guide/mimesupport.html#auto-view
auto_view text/plain text/html			# view html automatically

# }}}

# composing mail {{{
set ask_cc                           # ask for CC:
set attribution = "On %d, %n wrote:" # format of quoting header
set edit_headers                     # show headers when composing
set editor = "$EDITOR"
set fast_reply                       # skip to compose when replying
set fcc_attach                       # save attachments with the body
set forward_decode                   # decode when forwarding
set forward_format = "Fwd: %s"       # format of subject when forwarding
set forward_quote                    # include message in forwards
set from     = "hejops1@gmail.com"
set include                          # include message in replies
set real_name = "Joseph Yap"         # who am i?
set reply_to                         # reply to Reply to: field
set reverse_name                     # reply as whomever it was to
set sendmail = "/usr/local/bin/msmtp -a josephyap"
set sendmail_wait = 0
set sig_dashes                       # dashes before sig
set use_envelope_from                # which from?
unset mime_forward                   # forward attachments as part of body
unset record

# }}}

# bindings, macros {{{

# TODO: mark all in limit?
# bind index R imap-fetch-mail
bind index R group-reply
# bind index S sidebar-toggle-visible
# bind index \cr imap-fetch-mail
# bind index \cx delete-thread		# ctrl-shift not allowed
bind attach <return> view-mailcap
bind attach e view-mailcap
bind editor <Tab> complete-query
bind editor ^T complete
bind index - collapse-thread
bind index F limit
bind index G last-entry
bind index J next-page
bind index K previous-page
bind index \cd delete-thread
bind index g first-entry	# gg gives warning
bind index i flag-message
bind index l display-message
bind index { sidebar-prev          # go to previous folder in sidebar
bind index } sidebar-next         # go to next folder in sidebar
bind index,pager <down>   sidebar-next
bind index,pager <right>  sidebar-open
bind index,pager <space>   sidebar-open
bind index,pager <up>     sidebar-prev
bind index,pager N search-opposite
bind index,pager \cj   sidebar-next
bind index,pager \ck   sidebar-prev
bind index,pager \cl sidebar-open
bind pager <return> view-attachments
bind pager J next-page
bind pager K previous-page
bind pager \cd delete-message
bind pager e view-attachments
bind pager h exit
bind pager j next-line
bind pager k previous-line
bind pager l next-undeleted
macro index \cf "<limit>all\n" "show all messages (undo limit)"
set query_command = "echo '' && notmuch address from:/%s/"	# only people you have received mail from are suggested https://github.com/neomutt/neomutt/issues/629
unbind index h

# https://neomutt.org/guide/configuration#10-%C2%A0keyboard-macros
# doesn't work reliably from index, better from within attachment (text/plain)
set wait_key = no	# skip "Press any key to continue..."
macro index \cu "<display-message><view-attachments><search>plain<Enter><pipe-message>mailurl<Enter>"
macro index L "<display-message><view-attachments><search>plain<Enter><pipe-message>less<Enter>"
macro attach \cu "<pipe-message>mailurl<Enter>"

# macro index,pager \cu "<pipe-message>mailurl<Enter>" "Extract URLs out of a message"

# macro pager \cu <pipe-entry>'urlview'<enter> 'Follow links with urlview'
# macro attach S "<pipe-message>$HOME/scripts/samuat"<enter>
# https://gist.github.com/manolomartinez/7082024
macro attach s <save-entry><bol><right><right>
# good enough
# macro compose A "<shell-escape>bash $HOME/scripts/muttach<enter><enter-command>source /tmp/muttach<enter>" "Attach with Ranger"
# https://teddit.net/r/commandline/comments/cbxvdf/combine_neomutt_with_ranger/

# https://demu.red/blog/2017/11/neomutt-macro-opening-texthtml-attachment-from-the-index-view/
bind index,pager V  noop
# macro index,pager V "<view-attachments><search>html<enter><view-mailcap><exit>"	highlight first html
macro index,pager V "<view-attachments><search>plain<enter><view-mailcap>"
# open first plain

macro attach W "<save-entry><bol>~/mail<eol>" "Save to desktop"

# https://unix.stackexchange.com/a/91048
# /~b <str> to search body -> default? kinda slow tbh
# filter?

# }}}

# colors {{{
# https://www.sthu.org/code/codesnippets/mutt-gruvbox.html
# See http://www.mutt.org/doc/manual/#color

# bg0    = 234
# bg1    = 237
# bg2    = 239
# bg3    = 241
# bg4    = 243
# fg0    = 229
# fg1    = 223
# fg2    = 250
# fg3    = 248
# fg4    = 246

# aqua   = 108
# blue   = 109
# gray   = 245
# green  = 142
# orange = 208
# purple = 175
# red    = 167
# yellow = 214

# clean up a bit, there is about 0.5s lag
color attachment  color109 color234
color bold        color229 color234
color error       color167 color234
color hdrdefault  color246 color234
color indicator   color223 color237
color markers     color243 color234
color normal      color223 color234
color quoted      color250 color234
color quoted1     color108 color234
color quoted2     color250 color234
color quoted3     color108 color234
color quoted4     color250 color234
color quoted5     color108 color234
color search      color234 color208
color sidebar_divider    color250 color234
color sidebar_new        color142 color234
color signature   color108 color234
color status      color234 color250
color tilde       color243 color234
color tree        color142 color234
color underline   color223 color239

color index color108 color234 ~O
color index color109 color234 ~P
color index color142 color234 ~N
color index color167 color234 ~=
color index color175 color234 ~Q
color index color214 color234 ~F
color index color234 color167 ~D
color index color234 color223 ~T

color header color108 color234 "^Received:"
color header color108 color234 "^X-Spam-Status:"
color header color142 color234 "^Subject:"
color header color214 color234 "^(To:|From:)"

color body color108 color234 "^   Regie:.+"
#color body color142 color234 "[a-zA-Z]([-a-zA-Z0-9_]+\\.){2,256}[-a-zA-Z0-9_]{2,256}"
color body color142 color234 "[a-z]{3,256}://[-a-zA-Z0-9@:%._\\+~# = /?&,]+"
color body color142 color234 "^gpg: Good signature from"
color body color167 color234 "^gpg: BAD signature from"
color body color167 color234 "^gpg: Can't.*$"
color body color167 color234 "^gpg: Note: This key has expired!"
color body color208 color234 "[-a-z_0-9.%$]+@[-a-z_0-9.]+\\.[-a-z][-a-z]+"
color body color208 color234 "mailto:[-a-z_0-9.]+@[-a-z_0-9.]+"
color body color214 color234 "^-.*PGP.*-*"
color body color214 color234 "^gpg: can't handle these multiple signatures"
color body color214 color234 "^gpg: invalid node with packet of type"
color body color214 color234 "^gpg: signature verification suppressed"
color body color214 color234 "^gpg: There is no indication that the signature belongs to the owner."
color body color214 color234 "^gpg: WARNING:.*$"
color body color229 color234 "\\*[- A-Za-z]+\\*"
color body color234 color214 "[;:]-*[)>(<lt;|]"

color compose header            color223 color234
color compose security_encrypt  color175 color234
color compose security_sign     color109 color234
color compose security_both     color142 color234
color compose security_none     color208 color234
# }}}

# sidebar {{{
# %! 	  	“!”: one flagged message; “!!”: two flagged messages; “n!”: n flagged messages (for n > 2). Otherwise prints nothing.
# %*X 	  	Soft-fill with character “X” as pad
# %>X 	  	Right justify the rest of the string and pad with “X”
# %B 	  	Name of the mailbox
# %D 	  	Descriptive name of the mailbox
# %F 	* † 	Number of flagged messages in the mailbox
# %L 	* ‡ 	Number of messages after limiting; essentially = %S
# %N 	* † 	Number of unread messages in the mailbox (seen or unseen)
# %S 	* † 	Size of mailbox (total number of messages)
# %Z 	* † 	Number of new messages in the mailbox (unread, unseen)
# %d 	* ‡ 	Number of deleted messages
# %n 	* 	If there's new mail, display “N”, otherwise “”(space).
# %o 	* † 	Number of old messages in the mailbox (unread, but seen)
# %r 	* † 	Number of read messages in the mailbox
# %t 	* ‡ 	Number of tagged messages in the mailbox
# %|X 	  	Pad to the end of the line with “X”
# In order to use %S, %N, %F, and %!, $mail_check_stats must be set.  When
# thus set, a suggested value for this option is "%B%?F? [%F]?%*
# %?N?%N/?%S".
# https://neomutt.org/guide/gettingstarted.html#2-4-3-2-%C2%A0sidebar-format-string
# https://github.com/neomutt/neomutt/issues/2593#issuecomment-674584006

set mail_check_stats

# set sidebar_format = "%D %L %S"

set sidebar_format = "%D%?F? [%F]?%* %?N?%N/?%S" # mailbox [F]            N/S
# set sidebar_format = "%D%* %F/%N/%S" # mailbox              F/N/S
# set sidebar_format = "%D %?N?(%N)?%* %S" # mailbox (N)              S
# set sidebar_format = "%D%* ?F?%F/?%N" # mailbox                F/S

# }}}

# Templates
# https://gitlab.com/muttmua/mutt/-/wikis/MuttFaq/Misc#what-is-mutts-way-to-provide-templates-for-sending-new-email

#start a new email, fill in the template data & body, in the compose-menu
#execute the function "write-fcc" and specify your template-folder.
#
#Then, to use a template, apply the "resend-message" function on the desired
#template and continue to fill out the missing data and body.  You can also read
#a template from a file with partial headers and body text when you launch mutt
#with -H file.

# Aliases
# alias muttdude me@cs.hmc.edu (Michael Elkins)

# set alias_file = "~/.neomutt/alias"
# source "~/.neomutt/alias"
# Note: NeoMutt will not automatically source this file; you must
# explicitly use the “source” command for it to be executed in case this
# option points to a dedicated alias file.

# -------------------------------------------------------------------------
# Name: query_command
# -------------------------------------------------------------------------
# This  specifies  the  command  NeoMutt  will use to make external address
# queries.  The string may contain a “%s”, which will be substituted with
# the  query  string  the  user types.   NeoMutt  will  add quotes around
# the string substituted for “%s” automatically according to shell quoting
# rules, so you should avoid adding your own.  If no  “%s”  is found  in
# the  string,  NeoMutt will append the user's query to the end of the
# string.  See “query” for more information.
# -------------------------------------------------------------------------

# set query_command = "/usr/bin/lbdbq '%s'"
# set query_command = "/usr/bin/notmuch address '%s'"
##########################################################################
#   01 - Basic personal setup
##########################################################################
# -------------------------------------------------------------------------
# Name: alternates
# -------------------------------------------------------------------------
# alternates  is used to inform NeoMutt about alternate addresses where you
# receive mail; you can use regular expressions (regex) to specify
# alternate  addresses.  This  affects NeoMutt's idea about messages from
# you, and messages addressed to you.  unalternates  can be used to write
# exceptions to alternates patterns. To remove a regu‐ lar expression from
# the alternates list, use the unalternates command with exactly  the same
# regex or use “*” to remove all entries.  The  optional  -group flag
# causes all of the subsequent regular expressions to be added to or
# removed from the named group.

# alternates mymailbox@domain.tld
# alternates mymailbox@work.tld

# -------------------------------------------------------------------------
# Name: alias / unalias
# -------------------------------------------------------------------------
# alias  defines a surrogate key for the given address(es). Each address
# will be resolved into either an email address  (user@example.com) or a
# named  email  address  (User  Name <user@example.com>).   The  address
# may be specified in either format, or in the format “user@example.com
# (User Name)”.  Note: If you want to create an alias for more than one
# address, you must  separate the addresses with a comma (“,”).  unalias
# removes  the  alias corresponding to the given key or all aliases when
# “*” is used as an argument.  The optional -group flag causes the
# address(es) to be added  to or  removed from  the named group.
# -------------------------------------------------------------------------

# unalias *
# alias Lastname.Firstname Full Name <mailbox@domain.tld>
# alias -group Groupname Lastname.Firstname Full Name <mailbox@domain.tld>
##########################################################################
#   02 - Mailbox and folders
##########################################################################
# -------------------------------------------------------------------------
# Name: mbox_type
# -------------------------------------------------------------------------
# The default mailbox type used when creating new folders. May be any of
# “mbox”, “MMDF”, “MH” or “Maildir”.
# -------------------------------------------------------------------------

# set mbox_type = mbox
# set mbox_type = Maildir
# -------------------------------------------------------------------------
# Name: folder
# -------------------------------------------------------------------------
# Specifies the default location of your mailboxes.  A “+” or “ = ” at the
# beginning  of  a pathname  will be expanded to the value of this
# variable.  Note that if you change this variable (from the default) value
# you need to make  sure  that  the  assignment  occurs before you use “+”
# or “ = ” for any other variables since expansion takes place when han‐
# dling the “mailboxes” command.
# -------------------------------------------------------------------------

# set folder = ~/Mail
# -------------------------------------------------------------------------
# Name: spoolfile
# -------------------------------------------------------------------------
# If your spool mailbox is in a non-default place where NeoMutt cannot find
# it,  you  can specify its location with this variable.  If not specified,
# then the environment variables $MAIL and $MAILDIR will be checked.
# -------------------------------------------------------------------------

# set spoolfile = ""
# -------------------------------------------------------------------------
# Name: postponed
# -------------------------------------------------------------------------
# NeoMutt  allows you to indefinitely “postpone sending a message” which
# you are editing.  When you choose to postpone a message, NeoMutt saves it
# in  the  mailbox  specified  by this variable.  Also see the $postpone
# variable.
# -------------------------------------------------------------------------

# set postponed = "~/postponed"
# set postponed = "+Drafts"
# -------------------------------------------------------------------------
# Name: record
# -------------------------------------------------------------------------
# This specifies the file into which your outgoing messages should be
# appended.  (This is meant as the primary method for saving a copy of your
# messages, but another way  to  do this  is using the “my_hdr” command to
# create a “Bcc:” field with your email address in it.) The value of
# $record is overridden by the $force_name and $save_name variables, and
# the “fcc-hook” command.  Also see $copy.
# -------------------------------------------------------------------------

# set record = "~/sent"
# set record = "+Sent"
# -------------------------------------------------------------------------
# Name: trash
# -------------------------------------------------------------------------
# If set, this variable specifies the path of the trash folder where the
# mails marked for deletion will be moved, instead of being irremediably
# purged.  NOTE:  When you delete a message in the trash folder, it is
# really deleted, so that you have a way to clean the trash.
# -------------------------------------------------------------------------

# set trash = ""
# set trash = "+Trash"

# -------------------------------------------------------------------------
# Name: mailboxes
# -------------------------------------------------------------------------
# The mailboxes  specifies  folders which can receive mail and which will
# be checked for new messages. When changing folders, pressing space will
# cycle through folders with new mail.  The named-mailboxes is an
# alternative to mailboxes that allows adding a description for a mailbox.
# NeoMutt can be configured to display the description instead of the
# mailbox path.  The unmailboxes  command  is used to remove a file name
# from the list of folders which can receive mail.  If “*” is specified as
# the file name, the list is emptied.
# -------------------------------------------------------------------------

# unmailboxes *
# mailboxes +Drafts +Sent +Spam
##########################################################################
#   03 - Compose email
##########################################################################
# -------------------------------------------------------------------------
# Name: my_hdr / unmy_hdr
# -------------------------------------------------------------------------
# Using my_hdr, you can define headers which will be added to the messages
# you  compose.  unmy_hdr will remove the given user-defined headers.
# -------------------------------------------------------------------------

# unmy_hdr *
# my_hdr X-Location: Europe, Germany
# -------------------------------------------------------------------------
# Name: user_agent
# -------------------------------------------------------------------------
# When set, NeoMutt will add a “User-Agent:”  header  to  outgoing
# messages,  indicating which version of NeoMutt was used for composing
# them.
# -------------------------------------------------------------------------

# set user_agent

# -------------------------------------------------------------------------
# Name: editor
# -------------------------------------------------------------------------
# This variable specifies which editor is used by NeoMutt.  It defaults to
# the  value  of the  $VISUAL,  or  $EDITOR,  environment  variable, or to
# the string “vi” if neither of those are set.  The $editor string may
# contain a %s escape, which will be replaced by the name  of  the file  to
# be edited.  If the %s escape does not appear in $editor, a space and the
# name to be edited are appended.  The resulting string is then executed by
# running sh -c 'string' where string is the expansion of $editor described
# above.
# -------------------------------------------------------------------------

# set editor = "vi"
# set editor = "vim -c 'set spell spelllang = de,en' -c 'set colorcolumn = 72' -c 'startinsert' -c 'set tw = 7    2 et' -c 'set wrap' '+/^$'"
# -------------------------------------------------------------------------
# Name: edit_headers
# -------------------------------------------------------------------------
# This option allows you to edit the header of your outgoing messages along
# with the body of your message.  Although  the  compose menu may have
# localized header labels, the labels passed to your editor will be
# standard RFC2822 headers, (e.g. To:, Cc:, Subject:).  Headers  added  in
# your editor must also be RFC2822 headers, or one of the pseudo headers
# listed in “edit- header”.  NeoMutt will not understand localized header
# labels, just  as  it  would  not when parsing an actual email.  Note
# that changes made to the References: and Date: headers are ignored for
# interoper‐ ability reasons.
# -------------------------------------------------------------------------

# set edit_headers
# -------------------------------------------------------------------------
# Name: ispell
# -------------------------------------------------------------------------
# How to invoke ispell (GNU's spell-checking software).
# -------------------------------------------------------------------------

# set ispell = "ispell"
# set ispell = "aspell -e -c"
# -------------------------------------------------------------------------
# Name: attribution
# -------------------------------------------------------------------------
# This is the string that will precede a message which has been included in
# a reply.  For a full listing of defined printf(3)-like sequences see the
# section on $index_format.

# set attribution = "On %d, %n wrote:"
# set attribution = "Am %{%A}, den %{%x} um %{%X} %{%Z} schrieb %F:"
# -------------------------------------------------------------------------
# Name: forward_format
# -------------------------------------------------------------------------
# This variable controls the default subject when forwarding a message.  It
# uses the same format sequences as the $index_format variable.
# -------------------------------------------------------------------------

# set forward_format = "[%a: %s]"
# -------------------------------------------------------------------------
# Name: signature
# -------------------------------------------------------------------------
# Specifies the filename of your signature, which is appended to all
# outgoing  messages.  If  the filename ends with a pipe (“|”), it is
# assumed that filename is a shell command and input should be read from
# its standard output.
# -------------------------------------------------------------------------

# set signature ="~/.neomutt/signatur"
# -------------------------------------------------------------------------
# Name: empty_subject
# -------------------------------------------------------------------------
# This variable specifies the subject to be used when replying to an email
# with an empty subject.  It defaults to "Re: your mail".
# -------------------------------------------------------------------------

# set empty_subject = "Re: your mail"

# -------------------------------------------------------------------------
# Name: autoedit
# -------------------------------------------------------------------------
# When  set  along  with  $edit_headers, NeoMutt will skip the initial
# send-menu (prompting for subject and recipients) and allow you to
# immediately begin editing the body of your message.  The send-menu may
# still be accessed once you have finished editing the body of your
# message.
#
# Note: when this option is set, you cannot use send-hooks that depend on
# the recipients when composing a new (non-reply) message, as the initial
# list of recipients is empty.
#
# Also see $fast_reply.
# -------------------------------------------------------------------------

# set autoedit = no

##########################################################################
#   04 - Crypto
##########################################################################
# -------------------------------------------------------------------------
# Name: crypt_use_gpgme
# -------------------------------------------------------------------------
# This  variable controls the use of the GPGME-enabled crypto backends.  If
# it is set and NeoMutt was built with gpgme support, the gpgme code for
# S/MIME and PGP  will  be  used instead  of  the classic code.  Note that
# you need to set this option in .neomuttrc; it won't have any effect when
# used interactively.  Note that the GPGME backend does not support
# creating  old-style  inline  (traditional) PGP encrypted or signed
# messages (see $pgp_autoinline)
# -------------------------------------------------------------------------

# set crypt_use_gpgme
# -------------------------------------------------------------------------
# Name: crypt_use_pka
# -------------------------------------------------------------------------
# Controls  whether  NeoMutt  uses  PKA (see
# http://www.g10code.de/docs/pka-intro.de.pdf) during signature
# verification (only supported by the GPGME backend).
# -------------------------------------------------------------------------

# set crypt_use_pka

# -------------------------------------------------------------------------
# Name: pgp_default_key
# -------------------------------------------------------------------------
# This is the default key-pair to use for PGP operations.  It will be used
# for encryption (see $postpone_encrypt and $pgp_self_encrypt).  It will
# also be used for signing unless $pgp_sign_as is set.  The  (now
# deprecated) pgp_self_encrypt_as is an alias for this variable, and should
# no longer be used.  (PGP only
# -------------------------------------------------------------------------

# set pgp_default_key = "0x12345678"
# -------------------------------------------------------------------------
# Name: pgp_self_encrypt
# -------------------------------------------------------------------------
# When set, PGP encrypted messages will also be encrypted using the key in
# $pgp_default_key.  (PGP only)
# -------------------------------------------------------------------------

# set pgp_self_encrypt = yes
# -------------------------------------------------------------------------
# Name: crypt_autoencrypt
# -------------------------------------------------------------------------
# Setting this variable will cause NeoMutt to always attempt to PGP encrypt
# outgoing messages.  This is probably only useful in connection to the
# “send-hook” command.  It can be  overridden  by use  of the pgp menu,
# when encryption is not required or signing is requested as well.  If
# $smime_is_default is set, then OpenSSL is used instead to create S/MIME
# messages and settings can be overridden by use of the smime menu instead.
# (Crypto only)
# -------------------------------------------------------------------------

# set crypt_autoencrypt = no
# -------------------------------------------------------------------------
# Name: crypt_autopgp
# -------------------------------------------------------------------------
# This variable controls  whether  or  not  NeoMutt  may  automatically
# enable  PGP  encryption/signing  for  messages.   See  also
# $crypt_autoencrypt,  $crypt_replyencrypt,  $crypt_autosign,
# $crypt_replysign and $smime_is_default.
# -------------------------------------------------------------------------

# set crypt_autopgp = yes
# -------------------------------------------------------------------------
# Name: crypt_autosign
# -------------------------------------------------------------------------
# Setting this variable will cause NeoMutt to always attempt to
# cryptographically sign outgoing messages.  This can be overridden by use
# of the pgp menu, when signing is not required or encryp‐ tion is
# requested as well. If $smime_is_default is set, then OpenSSL is used
# instead to create S/MIME messages and settings can be overridden by use
# of the smime menu instead of the pgp menu.  (Crypto only)
# -------------------------------------------------------------------------

# set crypt_autosign = no
##########################################################################
#   05 - View / Look
##########################################################################
# -------------------------------------------------------------------------
# Name: index_format
# -------------------------------------------------------------------------
#
# This variable allows you to customize the message index display to your
# personal taste.
#
# “Format strings” are similar to the strings used in the C function
# printf(3) to format output (see the man page for more details).  For an
# explanation of the %? construct, see the status_format description.  The
# following sequences are defined in NeoMutt:
#
# %a     Address of the author
# %A     Reply-to address (if present; otherwise: address of author)
# %b     Filename of the original message folder (think mailbox)
# %B     The list to which the letter was sent, or else the folder name (%b).
# %C     Current message number
# %c     Number of characters (bytes) in the message
# %D     Date and time of message using date_format and local timezone
# %d     Date and time of message using date_format and sender's timezone
# %e     Current message number in thread
# %E     Number of messages in current thread
# %F     Author name, or recipient name if the message is from you
# %f     Sender (address + real name), either From: or Return-Path:
# %g     Newsgroup name (if compiled with NNTP support)
# %g     Message tags (e.g. notmuch tags/imap flags)
# %Gx    Individual message tag (e.g. notmuch tags/imap flags)
# %H     Spam attribute(s) of this message
# %I     Initials of author
# %i     Message-id of the current message
# %J     Message tags (if present, tree unfolded, and != parent's tags)
# %K     The list to which the letter was sent (if any; otherwise: empty)
# %L     If an address in the “To:” or “Cc:” header field matches an address Defined by the users “subscribe” command, this displays "To <list-name>", otherwise the same as %F
# %l     Number of lines in the message (does not work with maildir, Mh, and possibly IMAP folders)
# %M     Number of hidden messages if the thread is collapsed
# %m     Total number of message in the mailbox
# %N     Message score
# %n     Author's real name (or address if missing)
# %O     Original save folder where NeoMutt would formerly have Stashed the message: list name or recipient name If not sent to a list
# %P     Progress indicator for the built-in pager (how much of the file has been displayed)
# %q     Newsgroup name (if compiled with NNTP support)
# %R     Comma separated list of “Cc:” recipients
# %r     Comma separated list of “To:” recipients
# %S     Single character status of the message (“N”/“O”/“D”/“d”/“!”/“r”/“*”)
# %s     Subject of the message
# %T     The appropriate character from the $to_chars string
# %t     “To:” field (recipients)
# %u     User (login) name of the author
# %v     First name of the author, or the recipient if the message is from you
# %W     Name of organization of author (“Organization:” field)
# %x     “X-Comment-To:” field (if present and compiled with NNTP support)
# %X     Number of MIME attachments (please see the “attachments” section for possible speed effects)
# %Y     “X-Label:” field, if present, and (1) not at part of a thread tree, (2) at the top of a thread, or (3) “X-Label:” is different from Preceding message's “X-Label:”
# %y     “X-Label:” field, if present
# %Z     A  three  character  set  of  message  status  flags.   The  first  character  is  new/read/replied  flags  (“n”/“o”/“r”/“O”/“N”).   The  second  is   deleted   or   encryption   flags
# (“D”/“d”/“S”/“P”/“s”/“K”).  The third is either tagged/flagged (“*”/“!”), or one of the characters Listed in $to_chars.
# %zc    Message crypto flags
# %zs    Message status flags
# %zt    Message tag flags
# %{fmt} the date and time of the message is converted to sender's time zone, and “fmt” is expanded by the library function strftime(3); a leading bang disables locales
# %[fmt] the date and time of the message is converted to the local time zone, and “fmt” is expanded by the library function strftime(3); a leading bang disables locales
# %(fmt) the local date and time when the message was received.  “fmt” is expanded by the library function strftime(3); a leading bang disables locales
# %>X    right justify the rest of the string and pad with character “X”
# %|X    pad to the end of the line with character “X”
# %*X    soft-fill with character “X” as pad
#
# Date format expressions can be constructed based on relative dates. Using the date formatting operators along with nested conditionals, the date format can be modified based on how old a mes‐
# sage is.  See the section on “Conditional Dates” for an explanation and examples “Soft-fill” deserves some explanation: Normal right-justification will print everything to  the  left  of  the
# “%>”,  displaying  padding and whatever lies to the right only if there's room. By contrast, soft-fill gives priority to the right-hand side, guaranteeing space to display it and showing pad‐
# ding only if there's still room. If necessary, soft-fill will eat text leftwards to make room for rightward text.
#
# Note that these expandos are supported in “save-hook”, “fcc-hook” and “fcc-save-hook”, too.
# -------------------------------------------------------------------------

set index_format = "%4C %Z %{%b %d} %-15.15L %s"

# -------------------------------------------------------------------------
# Name: status_format
# -------------------------------------------------------------------------
# Controls the format of the status line displayed in the “index” menu.
# This string is similar to $index_format, but has its own set of
# printf(3)-like sequences:
#
# %b     Number of mailboxes with new mail *
# %d     Number of deleted messages *
# %f     The full pathname of the current mailbox
# %F     Number of flagged messages *
# %h     Local hostname
# %l     Size (in bytes) of the current mailbox *
# %L     Size (in bytes) of the messages shown (i.e., which match the current limit) *
# %m     The number of messages in the mailbox *
# %M     The number of messages shown (i.e., which match the current limit) *
# %n     Number of new messages in the mailbox *
# %o     Number of old unread messages *
# %p     Number of postponed messages *
# %P     Percentage of the way through the index
# %r     Modified/read-only/won't-write/attach-message indicator, According to $status_chars
# %R     Number of read messages *
# %s     Current sorting mode ($sort)
# %S     Current aux sorting method ($sort_aux)
# %t     Number of tagged messages *
# %u     Number of unread messages *
# %v     NeoMutt version string
# %V     Currently active limit pattern, if any *
# %>X    Right justify the rest of the string and pad with “X”
# %|X    Pad to the end of the line with “X”
# %*X    Soft-fill with character “X” as pad
#
# For an explanation of “soft-fill”, see the $index_format documentation.
#
# * = can be optionally printed if nonzero
#
# Some  of  the above sequences can be used to optionally print a string if
# their value is nonzero.  For example, you may only want to see the number
# of flagged messages if such messages exist, # since zero is not
# particularly meaningful.  To optionally print a string based upon one of
# the above sequences, the following construct is used:
#
# %?<sequence_char>?<optional_string>?
#
#
# where sequence_char is a character from the table above, and
# optional_string is the string you would like printed if sequence_char is
#nonzero.  optional_string may contain other sequences  as well as normal
# text, but you may not nest optional strings.
#
#
# Here is an example illustrating how to optionally print the number of new messages in a mailbox:
#
# %?n?%n new messages.?
#
# You can also switch between two strings using the following construct:
#
# %?<sequence_char>?<if_string>&<else_string>?
#
# If the value of sequence_char is non-zero, if_string will be expanded, otherwise else_string will be expanded.
#
# You can force the result of any printf(3)-like sequence to be lowercase
# by prefixing the sequence character with an underscore (“_”) sign.  For
# example, if you want to display the local host‐ # name in lowercase, you
# would use: “%_h”. If you prefix the sequence character with a colon
# (“:”) character, NeoMutt will replace any dots in the expansion by
# underscores. This might # be helpful with IMAP folders that don't like
# dots in folder names.
# -------------------------------------------------------------------------

set status_format = " %r %f [Msgs:%?M?%M/?%m%?n? New:%n?%?o? Old:%o?%?d? Del:%d?%?F? Flag:%F?%?t? Tag:%t?%?p? Post:%p?%?b? Inc:%b?]    %> (%P)   "

# -------------------------------------------------------------------------
# Name alias_format
# -------------------------------------------------------------------------
# Specifies the format of the data displayed for the ``alias'' menu.  The
# following printf(3)-style sequences are available:
# %a      Alias name
# %f      Flags - currently, a ``d'' for an alias marked for deletion
# %n      Index number
# %r      Address which alias expands to
# %t      Character which indicates if the alias is tagged for inclusion
# -------------------------------------------------------------------------

# set alias_format = "%4n %2f %t %-10a   %r"
# -------------------------------------------------------------------------
# Name: reverse_alias
# -------------------------------------------------------------------------
# This variable controls whether or not NeoMutt will display the ``personal''
# name from your aliases in the index menu if it finds an alias that
# matches the message's sender.  For example, if you have the following
# alias:
# alias juser abd30425@somewhere.net (Joe User)
#
# and then you receive mail which contains the following header:
# From: abd30425@somewhere.net
#
# It would be displayed in the index menu as ``Joe User'' instead of
# ``abd30425@somewhere.net.''  This is useful when the person's e-mail
# address is not human friendly.
# -------------------------------------------------------------------------

# set reverse_alias = no
# -------------------------------------------------------------------------
# Name: sort_alias
# -------------------------------------------------------------------------
# Specifies how the entries in the ``alias'' menu are sorted.  The
# following are legal values:
# - address (sort alphabetically by email address)
# - alias (sort alphabetically by alias name)
# - unsorted (leave in order specified in .neomuttrc)
# -------------------------------------------------------------------------

# set sort_alias = alias
# -------------------------------------------------------------------------
# Name: color
# -------------------------------------------------------------------------
# color object foreground background
# color { header | body } foreground background regex
# color index-object foreground background pattern
# color compose composeobject foreground background
#
# If your terminal supports color, these commands can be used to assign
# foreground/background combinations to certain objects. The currently
# defined  objects  are: attach_headers,  attachment, body,  bold,  error,
# hdrdefault, header, index, index_author, index_collapsed, index_date,
# index_flags, index_label, index_number, index_size, index_subject,
# index_tag, index_tags, indicator, markers, message, normal, progress,
# prompt, quoted, quotedN, search, signature, status, tilde, tree,
# underline.
#
# If the sidebar is enabled the following objects are also valid:
# sidebar_divider, sidebar_flagged, sidebar_highlight, sidebar_indicator,
# sidebar_new, sidebar_ordinary, sidebar_spoolfile.
#
# The body and header objects allow you to restrict the colorization to a
# regular expression.  The index-object permits you to select colored
# messages by pattern.
#
# The header and body match regex in the header/body of a message,
# index-object can match pattern in the message index.  Note that IMAP
# server-side searches ( = b, =B, =h) are not  supported  for color index
# patterns.
#
# Valid colors include: default, black, red, green, yellow, blue, magenta,
# cyan, white, colorN.
#
# The  uncolor command can be applied to the index, header and body objects
# only. It removes entries from the list. You must specify the same pattern
# specified in the color command for it to be removed. The pattern “*” is a
# special token which means to clear the color list of all entries.
#
# For further information on colorization, please consult the NeoMutt
# manual.
# -------------------------------------------------------------------------

# -------------------------------------------------------------------------
# Name: sidebar_whitelist / unsidebar_whitelist
# -------------------------------------------------------------------------
# The sidebar_whitelist command specifies mailboxes that will always be
# displayed in the sidebar, even if $sidebar_new_mail_only is set and the
# mailbox does not contain new mail.
# The unsidebar_whitelist command is used to remove a mailbox from the list
# of whitelisted mailboxes. Use “unsidebar_whitelist *” to remove all
# mailboxes.
# -------------------------------------------------------------------------
# -------------------------------------------------------------------------
# Name: sidebar_component_depth
# -------------------------------------------------------------------------
# By default the sidebar will show the mailbox's path, relative to the
# $folder variable. This specifies the number of parent directories to hide
# from display in the sidebar. For example:  If  a maildir is normally
# displayed in the sidebar as dir1/dir2/dir3/maildir, setting
# sidebar_component_depth = 2 will display it as dir3/maildir, having
# truncated the 2 highest directories.
# -------------------------------------------------------------------------
# -------------------------------------------------------------------------
# Name: sidebar_delim_chars
# -------------------------------------------------------------------------
# This contains the list of characters which you would like to treat as
# folder separators for displaying paths in the sidebar.  Local mail is
# often arranged in directories: `dir1/dir2/mailbox'.
#	set sidebar_delim_chars = '/'
# IMAP mailboxes are often named: `folder1.folder2.mailbox'.
# -------------------------------------------------------------------------
#	set sidebar_delim_chars = '.'
# set sidebar_folder_indent = yes
# -------------------------------------------------------------------------
# Name: sidebar_folder_indent
# -------------------------------------------------------------------------
# Set this to indent mailboxes in the sidebar.
# -------------------------------------------------------------------------
# -------------------------------------------------------------------------
# Name: sidebar_divider_char
# -------------------------------------------------------------------------
# This specifies the characters to be drawn between the sidebar (when
# visible) and the other NeoMutt panels. ASCII and Unicode line-drawing
# characters are supported.
# -------------------------------------------------------------------------

# -------------------------------------------------------------------------
# Name: sidebar_indent_string
# -------------------------------------------------------------------------
# This specifies the string that is used to indent mailboxes in the
# sidebar.  It defaults to two spaces.
# -------------------------------------------------------------------------
# -------------------------------------------------------------------------
# Name: sidebar_new_mail_only
# -------------------------------------------------------------------------
# When set, the sidebar will only display mailboxes containing new, or
# flagged, mail.
# -------------------------------------------------------------------------
# Name: sidebar_next_new_wrap
# -------------------------------------------------------------------------
# When  set,  the <sidebar-next-new> command will not stop and the end of
# the list of mailboxes, but wrap around to the beginning. The
# <sidebar-prev-new> command is similarly affected, wrapping around to the
# end of the list.
# -------------------------------------------------------------------------

set sidebar_short_path = yes
# -------------------------------------------------------------------------
# Name: sidebar_on_right
# -------------------------------------------------------------------------
# When set, the sidebar will appear on the right-hand side of the screen.
# -------------------------------------------------------------------------
# -------------------------------------------------------------------------
# Name: sidebar_short_path
# -------------------------------------------------------------------------
# By default the sidebar will show the mailbox's path, relative to the
# $folder variable. Setting sidebar_shortpath = yes will shorten the names
# relative to the previous name. Here's an example:
#
#              shortpath = no
#                     shortpath = yes shortpath = yes, folderindent = yes, indentstr = ".."
#              fruit  fruit fruit
#              fruit.apple
#                     apple ..apple
#              fruit.banana
#                     banana ..banana
#              fruit.cherry
#                     cherry ..cherry
# -------------------------------------------------------------------------

# -------------------------------------------------------------------------
# Name: sidebar_sort_method
# -------------------------------------------------------------------------
# Specifies how to sort entries in the file browser.  By default, the
# entries are sorted alphabetically.
#
# Valid values:
#              ‐ alpha (alphabetically)
#              ‐ count (all message count)
#              ‐ flagged (flagged message count)
#              ‐ name (alphabetically)
#              ‐ new (unread message count)
#              ‐ path (alphabetically)
#              ‐ unread (unread message count)
#              ‐ unsorted
#
# You may optionally use the “reverse-” prefix to specify reverse sorting
# order (example: “set sort_browser = reverse-date”).
# -------------------------------------------------------------------------
# -------------------------------------------------------------------------
# Name: sidebar_visible
# -------------------------------------------------------------------------
# This specifies whether or not to show sidebar. The sidebar shows a list
# of all your mailboxes.
# -------------------------------------------------------------------------
#
set sidebar_visible = yes
# -------------------------------------------------------------------------
# Name: sidebar_width
# -------------------------------------------------------------------------
# This controls the width of the sidebar.  It is measured in screen
# columns.  For example: sidebar_width = 20 could display 20 ASCII
# characters, or 10 Chinese characters.
# -------------------------------------------------------------------------
#
set sidebar_width = 20

##########################################################################
#   06 - SMTP
##########################################################################
# -------------------------------------------------------------------------
# Name: smtp_url
# -------------------------------------------------------------------------
# Defines the SMTP smarthost where sent messages should relayed for
# delivery. This should take the form of an SMTP URL, e.g.:
# smtp[s]://[user[:pass]@]host[:port]
# where “[...]” denotes an optional part.  Setting this variable overrides
# the value of the $sendmail variable.

# set smtp_url = ""
# -------------------------------------------------------------------------
# Name: smtp_pass
# -------------------------------------------------------------------------
# Specifies  the  password  for  your  SMTP account.  If unset, NeoMutt
# will prompt you for your password when you first send mail via SMTP.  See
# $smtp_url to configure NeoMutt to send mail via SMTP.
#
# Warning: you should only use this option when you are on a fairly secure
# machine, because the superuser can read your neomuttrc even if you are
# the only one who can read the file.

# set smtp_pass = ""
# -------------------------------------------------------------------------
# Name: smtp_authenticators
# -------------------------------------------------------------------------
# This  is  a  colon-delimited  list of authentication methods NeoMutt may
# attempt to use to log in to an SMTP server, in the order NeoMutt should
# try them.  Authentication methods are any SASL mechanism, e.g. “plain”,
# “digest-md5”, “gssapi” or “cram-md5”.  This option is case-insensitive.
# If it is “unset” (the default)  NeoMutt  will  try  all  available
# methods,  in  order  from most-secure to least-secure. Support for the
# “plain” mechanism is bundled; other mechanisms are provided by an
# external SASL library (look for +USE_SASL in the output of neomutt -v).
#
# Example:
# set smtp_authenticators = "digest-md5:cram-md5"
##########################################################################
#   07 - IMAP
##########################################################################
# -------------------------------------------------------------------------
# Name: imap_user
# -------------------------------------------------------------------------
# The name of the user whose mail you intend to access on the IMAP server.
# This variable defaults to your user name on the local machine.

# set imap_user = "imapuser"

# -------------------------------------------------------------------------
# Name: imap_pass
# -------------------------------------------------------------------------
# Specifies the password for your IMAP account.  If unset, NeoMutt will
# prompt you for your password when you invoke the <imap-fetch-mail>
# function or try to open an IMAP folder.
#
# Warning: you should only use this option when you are on a fairly secure
# machine, because the superuser can read your neomuttrc even if you are
# the only one who can read the file.

# set imap_pass = "imappasswd"

##########################################################################
#   08 - POP3
##########################################################################

##########################################################################
#   10 - Hooks
##########################################################################
# -------------------------------------------------------------------------
# Name: folder-hook
# -------------------------------------------------------------------------
# When NeoMutt enters a folder which matches regex (or, when regex is
# preceded by an exclamation mark, does not match regex), the given command
# is executed.
# When several folder-hooks match a given mail folder, they are executed in
# the order given in the configuration file.

# -------------------------------------------------------------------------
# Name: mbox-hook
# -------------------------------------------------------------------------
# When NeoMutt changes to a mail folder which matches regex, mailbox will
# be used as the “mbox” folder, i.e. read messages will be moved to that
# folder when the mail folder is left.
# Note that execution of mbox-hooks is dependent on the $move configuration
# variable. If set to “no” (the default), mbox-hooks will not be executed.
# The first matching mbox-hook applies.

# -------------------------------------------------------------------------
# Name: message-hook
# -------------------------------------------------------------------------
# Before NeoMutt displays (or formats for replying or forwarding) a message
# which matches the given pattern (or, when it is preceded by an
# exclamation mark, does not  match  the  pattern),  the given command is
# executed.  When multiple message-hooks match, they are executed in the
# order in which they occur in the configuration file.

# -------------------------------------------------------------------------
# Name: reply-hook
# -------------------------------------------------------------------------
#  These  commands  can be used to execute arbitrary configuration commands
#  based upon recipients of the message. pattern is used to match the
#  message, see section “Message Matching in Hooks” in manual for details.
#  command is executed when pattern matches.
#
# reply-hook is matched against the message you are replying to, instead of
# the message you are sending. send-hook is matched against all messages,
# both new and replies. Note,  reply-hooks  are matched before the
# send-hook, regardless of the order specified in the user's configuration
# file.

# -------------------------------------------------------------------------
# Name: send-hook
# -------------------------------------------------------------------------
# These  commands  can be used to execute arbitrary configuration commands
# based upon recipients of the message. pattern is used to match the
# message, see section “Message Matching in Hooks” in manual for details.
# command is executed when pattern matches.
#
# reply-hook is matched against the message you are replying to, instead of the
# message you are sending. send-hook is matched against all messages, both new
# and replies. Note,  reply-hooks  are matched before the send-hook, regardless
# of the order specified in the user's configuration file.
#
# send2-hook  is  matched  every  time a message is changed, either by editing
# it, or by using the compose menu to change its recipients or subject.
# send2-hook is executed after send-hook, and can, e.g., be used to set
# parameters such as the $sendmail variable depending on the message's sender
# address. Note, send-hooks are only executed once after getting the initial
# list of recip‐ ients.

# -------------------------------------------------------------------------
# Name: send-hook
# -------------------------------------------------------------------------
# These  commands  can be used to execute arbitrary configuration commands
# based upon recipients of the message. pattern is used to match the
# message, see section “Message Matching in Hooks” in manual for details.
# command is executed when pattern matches.
#
# reply-hook is matched against the message you are replying to, instead of the
# message you are sending. send-hook is matched against all messages, both new
# and replies. Note,  reply-hooks  are matched before the send-hook, regardless
# of the order specified in the user's configuration file.
#
# send2-hook  is  matched  every  time a message is changed, either by editing
# it, or by using the compose menu to change its recipients or subject.
# send2-hook is executed after send-hook, and can, e.g., be used to set
# parameters such as the $sendmail variable depending on the message's sender
# address. Note, send-hooks are only executed once after getting the initial
# list of recip‐ ients.

# -------------------------------------------------------------------------
# Name: crypt-hook
# -------------------------------------------------------------------------
# The crypt-hook command provides a method by which you can specify the ID of
# the public key to be used when encrypting messages to a certain recipient.
# The meaning of  keyid  is  to  be  taken broadly: This can be a different
# email address, a numerical keyid, or even just an arbitrary search string.
# You may use multiple crypt-hooks with the same regex; multiple matching
# crypt-hooks result in the use of multiple keyids for a recipient.
# -------------------------------------------------------------------------
